;; Auto-generated. Do not edit!


(when (boundp 'ndx_manipulation::RotaryGripperCommandGoal)
  (if (not (find-package "NDX_MANIPULATION"))
    (make-package "NDX_MANIPULATION"))
  (shadow 'RotaryGripperCommandGoal (find-package "NDX_MANIPULATION")))
(unless (find-package "NDX_MANIPULATION::ROTARYGRIPPERCOMMANDGOAL")
  (make-package "NDX_MANIPULATION::ROTARYGRIPPERCOMMANDGOAL"))

(in-package "ROS")
;;//! \htmlinclude RotaryGripperCommandGoal.msg.html


(defclass ndx_manipulation::RotaryGripperCommandGoal
  :super ros::object
  :slots (_type _offset _effort ))

(defmethod ndx_manipulation::RotaryGripperCommandGoal
  (:init
   (&key
    ((:type __type) "")
    ((:offset __offset) 0)
    ((:effort __effort) 0)
    )
   (send-super :init)
   (setq _type (string __type))
   (setq _offset (round __offset))
   (setq _effort (round __effort))
   self)
  (:type
   (&optional __type)
   (if __type (setq _type __type)) _type)
  (:offset
   (&optional __offset)
   (if __offset (setq _offset __offset)) _offset)
  (:effort
   (&optional __effort)
   (if __effort (setq _effort __effort)) _effort)
  (:serialization-length
   ()
   (+
    ;; string _type
    4 (length _type)
    ;; int32 _offset
    4
    ;; int32 _effort
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _type
       (write-long (length _type) s) (princ _type s)
     ;; int32 _offset
       (write-long _offset s)
     ;; int32 _effort
       (write-long _effort s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _type
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _type (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; int32 _offset
     (setq _offset (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _effort
     (setq _effort (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get ndx_manipulation::RotaryGripperCommandGoal :md5sum-) "368af3338434120067228a0799903707")
(setf (get ndx_manipulation::RotaryGripperCommandGoal :datatype-) "ndx_manipulation/RotaryGripperCommandGoal")
(setf (get ndx_manipulation::RotaryGripperCommandGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string type       # Can be 'open', 'close' or ''. If 'open' or 'close', clutch is engaged.
int32 offset      # Rotation offset. If positive, rotation is clockwise.
int32 effort      # Max motor current

")



(provide :ndx_manipulation/RotaryGripperCommandGoal "368af3338434120067228a0799903707")


